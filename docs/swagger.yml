swagger: "2.0"
info:
  description: "Документация по API 'List-products'"
  version: "1.0.0"
  title: "List-products"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8084"
basePath: "/api"
tags:
  - name: "products"
    description: "Создание, вывод и удаление продуктов"
  - name: "auth"
    description: "Регистрация, вход и выход"
schemes:
  - "http"
consumes:
  - "application/json"
produces:
  - "application/json"
paths:
  /register:
    post:
      tags:
        - "auth"
      summary: "Регистрация нового пользователя"
      parameters:
        - in: "body"
          name: "user"
          description: "Данные пользователя"
          required: true
          schema:
            type: "object"
            properties:
              name:
                type: "string"
              email:
                type: "string"
              password:
                type: "string"
                minLength: 8
              password_confirmation:
                type: "string"
                minLength: 8
      responses:
        "201":
          description: "Пользователь создан"
  /login:
    post:
      tags:
        - "auth"
      summary: "Вход"
      description: "Вход в аккаунт пользователя"
      parameters:
        - in: "body"
          name: "user"
          description: "Данные для входа"
          required: true
          schema:
            type: "object"
            properties:
              email:
                type: "string"
              password:
                type: "string"
      responses:
        "204":
          description: "Пользовате вошел в свой аккаунт"
  /logout:
    post:
      tags:
        - "auth"
      summary: "Выход"
      security:
        - auth: []
      parameters:
        - in: "body"
          name: "user"
          description: "Данные для выхода"
          required: true
          schema:
            type: "object"
            properties:
              email:
                type: "string"
              password:
                type: "string"
      responses:
        "204":
          description: "Пользователь вышел"


  /products:
    get:
      tags:
        - "products"
      summary: "Вывести продукты"
      description: "Вывести продукты"
      security:
        - auth: []
      parameters:
        - in: "query"
          name: "page"
          type: "integer"
          description: "Номер страницы"
          required: false
        - in: "query"
          name: "type"
          type: "integer"
          description: "Тип продукта id"
          required: false
        - in: "query"
          name: "name"
          type: "string"
          description: "Название продукта"
          required: false
      responses:
        "200":
          description: "В случае успеха мы получаем следующие"
          schema:
            type: "array"
            items:
              $ref: "#/schemaDefinitions/product/ProductSearch"
    post:
      tags:
        - "products"
      summary: "Создать продукт"
      description: "Создать продукт"
      security:
        - auth: []
      parameters:
        - in: "body"
          name: "page"
          description: ""
          required: true
          schema:
            $ref: "#/schemaDefinitions/product/Product"

      responses:
        "200":
          description: "Продукт создан"

  /products/{id}:
    delete:
      tags:
        - "products"
      summary: "Удалить продукт"
      description: "Удалить продукт по id"
      security:
        - auth: []
      parameters:
        - in: "path"
          name: "id"
          type: "integer"
          required: true
          description: "Product id"
      responses:
        "200":
          description: "Продукт удален"




securityDefinitions:
  auth:
    type: "apiKey"
    in: "header"
    name: "laravel_session"
schemaDefinitions:
  user:
    Profile:
      type: "object"
      properties:
        created_at:
          type: "string"
        email:
          type: "string"
        email_verified_at:
          type: "string"
        id:
          type: "integer"
        name:
          type: "string"
        updated_at:
          type: "string"
  product:
    ProductSearch:
      type: "object"
      properties:
        id:
          type: "integer"
        name:
          type: "string"
        type:
          $ref: "#/schemaDefinitions/product/Type"
        price:
          type: "number"
        weight:
          type: "number"
        color:
          type: "string"
    Product:
      type: "object"
      properties:
        name:
          type: "string"
        type:
          type: "integer"
        price:
          type: "number"
        weight:
          type: "number"
        color:
          type: "string"
    Type:
      type: "object"
      properties:
        id:
          type: "integer"
        name:
          type: "string"
    TypeTitle:
      type: "object"
      properties:
        title:
          type: "string"
  responses:
    AuthError:
      type: "object"
      properties:
        message:
          type: "string"
        errors:
          type: "object"
      example:
        message: "The given data was invalid."
        errors:
          password: "The password field is required."
          email: "The email field is required."
    ProductError:
      type: "object"
      properties:
        message:
          type: "string"
        errors:
          type: "object"
      example:
        message: "Product data is invalid."
        errors:
          weight: "The weight must be a number.The weight field is required."
